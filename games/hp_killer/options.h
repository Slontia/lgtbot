#include "occupation.h"
EXTEND_OPTION("回合数", 回合数, (ArithChecker<uint32_t>(1, 100, "回合数")), 20)
EXTEND_OPTION("每回合时间限制", 时限, (ArithChecker<uint32_t>(10, 3600, "超时时间（秒）")), 300)
EXTEND_OPTION("初始血量", 血量, (ArithChecker<int32_t>(1, 100, "HP 值")), 100)
EXTEND_OPTION("初始治愈次数", 治愈次数, (ArithChecker<int32_t>(0, 10, "次数")), 3)
EXTEND_OPTION("五人场身份列表（身份数量需为 5，否则实际采用默认身份列表）", 五人身份, (FixedSizeRepeatableChecker<EnumChecker<Occupation>>(5)), std::vector<Occupation>{})
EXTEND_OPTION("六人场身份列表（身份数量需为 6，否则实际采用默认身份列表）", 六人身份, (FixedSizeRepeatableChecker<EnumChecker<Occupation>>(6)), std::vector<Occupation>{})
EXTEND_OPTION("七人场身份列表（身份数量需为 7，否则实际采用默认身份列表）", 七人身份, (FixedSizeRepeatableChecker<EnumChecker<Occupation>>(7)), std::vector<Occupation>{})
EXTEND_OPTION("八人场身份列表（身份数量需为 8，否则实际采用默认身份列表）", 八人身份, (FixedSizeRepeatableChecker<EnumChecker<Occupation>>(8)), std::vector<Occupation>{})
EXTEND_OPTION("九人场身份列表（身份数量需为 9，否则实际采用默认身份列表）", 九人身份, (FixedSizeRepeatableChecker<EnumChecker<Occupation>>(9)), std::vector<Occupation>{})
EXTEND_OPTION("【仅测试用】依次设置玩家身份", 身份列表, (RepeatableChecker<EnumChecker<Occupation>>()), std::vector<Occupation>{})
